import { Injectable, CanActivate, ExecutionContext, ForbiddenException } from '@nestjs/common';

@Injectable()
export class RoleGuard implements CanActivate {
  canActivate(context: ExecutionContext): boolean {
    const request = context.switchToHttp().getRequest();
    const user = request.user;

    console.log('üîç Usu√°rio recebido no RoleGuard:', user); // üîπ DEBUG

    if (!user) {
      console.error('‚ùå Erro: Nenhum usu√°rio foi encontrado no request.');
      throw new ForbiddenException('Usu√°rio n√£o autenticado.');
    }

    if (!user.role) {
      console.error('‚ùå Erro: Role do usu√°rio n√£o encontrada.');
      throw new ForbiddenException('Usu√°rio n√£o autenticado.');
    }

    if (user.role !== 'admin') {
      console.error(`‚ùå Acesso negado: Usu√°rio "${user.userId}" n√£o tem permiss√£o de admin. Role atual: ${user.role}`);
      throw new ForbiddenException('Acesso negado: voc√™ n√£o tem permiss√£o para acessar este recurso.');
    }

    console.log('‚úÖ Usu√°rio autenticado como admin, acesso permitido.');
    return true;
  }
}
